From 087f82d72aaf4221eb7b5e77ef6a9c098969db81 Mon Sep 17 00:00:00 2001
From: Martin Kampas <martin.kampas@jolla.com>
Date: Tue, 24 Jul 2018 12:01:54 +0200
Subject: [PATCH] Enable version constraints in AutoDependOn tag

Make it possible to specify packages with versions as the value of
AutoDependOn tag inside Package Information File. The syntax is the same
as for the Dependencies tag.

This patch is not in a shape suitable for upstream inclusion. It changes
an API unnecessary and the proper solution should be to honor version
constrains from Dependencies tag instead.

Task-number: QTIFW-1165
Change-Id: Ifc7f54e5ccd1bd9f82de0e4596882de05611a92b
---
 src/libs/installer/component.cpp             | 41 ++++++++++++++------
 src/libs/installer/component.h               |  2 +-
 src/libs/installer/componentchecker.cpp      |  3 +-
 src/libs/installer/installercalculator.cpp   |  2 +-
 src/libs/installer/installercalculator.h     |  2 +-
 src/libs/installer/uninstallercalculator.cpp |  4 +-
 6 files changed, 38 insertions(+), 16 deletions(-)

diff --git a/src/libs/installer/component.cpp b/src/libs/installer/component.cpp
index da0230ad..8311f4af 100644
--- a/src/libs/installer/component.cpp
+++ b/src/libs/installer/component.cpp
@@ -1190,7 +1190,7 @@ void Component::setInstalled()
 
     \sa {component::isAutoDependOn}{component.isAutoDependOn}
 */
-bool Component::isAutoDependOn(const QSet<QString> &componentsToInstall) const
+bool Component::isAutoDependOn(const QHash<QString, Component *> &componentsToInstall) const
 {
     // If there is no auto depend on value or the value is empty, we have nothing todo. The component does
     // not need to be installed as an auto dependency.
@@ -1198,18 +1198,37 @@ bool Component::isAutoDependOn(const QSet<QString> &componentsToInstall) const
     if (autoDependOnList.isEmpty())
         return false;
 
-    QSet<QString> components = componentsToInstall;
-    const QStringList installedPackages = d->m_core->localInstalledPackages().keys();
-    foreach (const QString &name, installedPackages)
-        components.insert(name);
+    QHash<QString, QString> autoDependOn;
+    foreach (const QString &component, autoDependOnList) {
+        autoDependOn.insert(component.section(QChar::fromLatin1('-'), 0, 0),
+                component.section(QChar::fromLatin1('-'), 1));
+    }
 
-    foreach (const QString &component, components) {
-        autoDependOnList.removeAll(component);
-        if (autoDependOnList.isEmpty()) {
-            // If all components in the isAutoDependOn field are already installed or selected for
-            // installation, this component needs to be installed as well.
-            return true;
+    auto resolve = [&autoDependOn](const QString &name, const QString &version) -> bool {
+        if (autoDependOn.contains(name)) {
+            QString requiredVersion = autoDependOn.value(name);
+            if (requiredVersion.isEmpty() ||
+                    PackageManagerCore::versionMatches(version, requiredVersion)) {
+                autoDependOn.remove(name);
+                if (autoDependOn.isEmpty()) {
+                    // If all components in the isAutoDependOn field are already installed or selected for
+                    // installation, this component needs to be installed as well.
+                    return true;
+                }
+            }
         }
+        return false;
+    };
+
+    foreach (Component *component, componentsToInstall) {
+        if (resolve(component->name(), component->value(scVersion)))
+            return true;
+    }
+
+    const LocalPackagesHash installedPackages = d->m_core->localInstalledPackages();
+    foreach (const KDUpdater::LocalPackage &package, installedPackages) {
+        if (resolve(package.name, package.version))
+            return true;
     }
 
     return false;
diff --git a/src/libs/installer/component.h b/src/libs/installer/component.h
index 01622548..e2c591a6 100644
--- a/src/libs/installer/component.h
+++ b/src/libs/installer/component.h
@@ -163,7 +163,7 @@ public:
     bool operationsCreatedSuccessfully() const;
 
     Q_INVOKABLE bool isDefault() const;
-    Q_INVOKABLE bool isAutoDependOn(const QSet<QString> &componentsToInstall) const;
+    Q_INVOKABLE bool isAutoDependOn(const QHash<QString, Component *> &componentsToInstall) const;
 
     Q_INVOKABLE void setInstalled();
     Q_INVOKABLE bool isInstalled(const QString version = QString()) const;
diff --git a/src/libs/installer/componentchecker.cpp b/src/libs/installer/componentchecker.cpp
index de862632..08fc1a9d 100644
--- a/src/libs/installer/componentchecker.cpp
+++ b/src/libs/installer/componentchecker.cpp
@@ -150,7 +150,8 @@ QStringList ComponentChecker::checkComponent(Component *component)
         }
         foreach (const QString &autoDependency, autoDependencies) {
             Component *autoDependencyComponent = PackageManagerCore::componentByName(
-                        autoDependency, allComponents);
+                        autoDependency.section(QChar::fromLatin1('-'), 0, 0),
+                        allComponents);
             if (autoDependencyComponent && autoDependencyComponent->childCount()) {
                 checkResult << QString::fromLatin1("Component %1 auto depends on component %2 "
                     "which has children components. This will not work properly.")
diff --git a/src/libs/installer/installercalculator.cpp b/src/libs/installer/installercalculator.cpp
index 064dbafa..14bd4e2d 100644
--- a/src/libs/installer/installercalculator.cpp
+++ b/src/libs/installer/installercalculator.cpp
@@ -96,7 +96,7 @@ void InstallerCalculator::realAppendToInstallComponents(Component *component, co
 {
     if (!component->isInstalled(version) || component->updateRequested()) {
         m_orderedComponentsToInstall.append(component);
-        m_toInstallComponentIds.insert(component->name());
+        m_toInstallComponentIds.insert(component->name(), component);
     }
 }
 
diff --git a/src/libs/installer/installercalculator.h b/src/libs/installer/installercalculator.h
index b2d05bdb..c3b14aa8 100644
--- a/src/libs/installer/installercalculator.h
+++ b/src/libs/installer/installercalculator.h
@@ -70,7 +70,7 @@ private:
 
     QList<Component*> m_allComponents;
     QHash<Component*, QSet<Component*> > m_visitedComponents;
-    QSet<QString> m_toInstallComponentIds; //for faster lookups
+    QHash<QString, Component *> m_toInstallComponentIds; //for faster lookups
     QString m_componentsToInstallError;
     //calculate installation order variables
     QList<Component*> m_orderedComponentsToInstall;
diff --git a/src/libs/installer/uninstallercalculator.cpp b/src/libs/installer/uninstallercalculator.cpp
index 2109cc8b..32a21eb8 100644
--- a/src/libs/installer/uninstallercalculator.cpp
+++ b/src/libs/installer/uninstallercalculator.cpp
@@ -75,7 +75,9 @@ void UninstallerCalculator::appendComponentsToUninstall(const QList<Component*>
     foreach (Component *component, m_installedComponents) {
         // If a components is installed and not yet scheduled for un-installation, check for auto depend.
         if (component->isInstalled() && !m_componentsToUninstall.contains(component)) {
-            QStringList autoDependencies = component->autoDependencies();
+            QStringList autoDependencies;
+            foreach (const QString &autoDependency, component->autoDependencies())
+                autoDependencies.append(autoDependency.section(QChar::fromLatin1('-'), 0, 0));
             if (autoDependencies.isEmpty())
                 continue;
 
-- 
2.17.1

